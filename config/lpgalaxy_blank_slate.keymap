/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NUM_L 1
#define SYM_L 2

/ {
    chosen {
        zmk,physical-layout = &layout_ortho_4x12_all1u;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
                &kp ESC    &kp Q    &kp W    &kp E    &kp R    &kp T    &kp Y    &kp U    &kp I      &kp O      &kp P      &kp BKSP
                &kp TAB    &kp A    &kp S    &kp D    &kp F    &kp G    &kp H    &kp J    &kp K      &kp L      &kp SEMI   &kp COLON
                &kp LSHFT  &kp Z    &kp X    &kp C    &kp V    &kp B    &kp N    &kp M    &kp LT     &kp COMMA  &kp GT     &kp RET
                &kp LCTRL  &kp CAPS &kp LGUI &kp LALT &mo NUM_L &kp SPACE &kp SPACE &kp LBKT &kp RBKT &kp LEFT  &kp DOWN  &kp RIGHT
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &trans     &trans   &trans   &trans   &trans   &trans   &kp 7    &kp 8    &kp 9      &kp 0      &trans     &trans
                &trans     &trans   &trans   &trans   &trans   &trans   &kp 4    &kp 5    &kp 6      &trans     &trans     &trans
                &trans     &trans   &trans   &trans   &trans   &trans   &kp 1    &kp 2    &kp 3      &trans     &trans     &trans
                &trans     &trans   &trans   &trans   &mo SYM_L &trans   &kp 0    &trans   &trans     &trans     &trans     &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &trans     &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PERC &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR  &trans
                &trans     &trans  &trans   &trans   &trans   &trans   &trans    &trans   &trans    &trans    &trans    &trans
                &trans     &trans  &trans   &trans   &trans   &trans   &trans    &trans   &trans    &trans    &trans    &trans
                &trans     &trans  &trans   &trans   &trans   &trans   &trans    &trans   &trans    &trans    &trans    &trans
            >;
        };
    };
};
